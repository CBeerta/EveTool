{\rtf1\ansi\deff1\adeflang1025
{\fonttbl{\f0\froman\fprq2\fcharset0 Times New Roman;}{\f1\fswiss\fprq2\fcharset0 Arial;}{\f2\fswiss\fprq2\fcharset0 Arial;}{\f3\fnil\fprq0\fcharset0 OpenSymbol{\*\falt Arial Unicode MS};}{\f4\fmodern\fprq1\fcharset0 Courier New;}{\f5\fswiss\fprq2\fcharset0 Calibri;}{\f6\fnil\fprq0\fcharset128 OpenSymbol{\*\falt Arial Unicode MS};}{\f7\fswiss\fprq2\fcharset0 Arial Unicode MS;}{\f8\fswiss\fprq2\fcharset0 Tahoma;}{\f9\fnil\fprq0\fcharset0 Tahoma;}}
{\colortbl;\red0\green0\blue0;\red128\green128\blue128;}
{\stylesheet{\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033\snext1 Normal;}
{\s2\sb240\sa120\keepn\ql\rtlch\af8\afs28\lang255\ltrch\dbch\af7\langfe1033\hich\fs28\lang1033\loch\fs28\lang1033\sbasedon1\snext3 Heading;}
{\s3\sa120\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033\sbasedon1\snext3 Body Text;}
{\s4\sa120\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033\sbasedon3\snext4 List;}
{\s5\sb120\sa120\ql\rtlch\af9\afs24\lang255\ai\ltrch\dbch\langfe1033\hich\fs24\lang1033\i\loch\fs24\lang1033\i\sbasedon1\snext5 caption;}
{\s6\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033\sbasedon1\snext6 Index;}
{\s7\sb120\sa120\ql\rtlch\afs24\lang255\ai\ltrch\dbch\langfe1033\hich\fs24\lang1033\i\loch\fs24\lang1033\i\sbasedon1\snext7 caption;}
{\*\cs9\cf0\rtlch\af3\afs24\lang255\ltrch\dbch\af3\langfe255\hich\f3\fs24\lang2057\loch\f3\fs24\lang2057 Bullet Symbols;}
}{\*\listtable{\list\listtemplateid1
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li360}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li720}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li1080}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li1440}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li1800}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li2160}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li2520}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li2880}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li3240}
{\*\soutlvl{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li3600}}\listid1}
{\list\listtemplateid2
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li360}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li720}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li1080}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li1440}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li1800}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li2160}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li2520}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li2880}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li3240}
{\*\soutlvl{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li3600}}\listid2}
{\list\listtemplateid3
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li360}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li720}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li1080}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li1440}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li1800}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li2160}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li2520}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li2880}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li3240}
{\*\soutlvl{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li3600}}\listid3}
{\list\listtemplateid4
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li360}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li720}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li1080}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li1440}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li1800}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li2160}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li2520}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li2880}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li3240}
{\*\soutlvl{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li3600}}\listid4}
{\list\listtemplateid5
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li360}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li720}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li1080}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li1440}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li1800}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li2160}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li2520}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li2880}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li3240}
{\*\soutlvl{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f3\f3\f3\f6\fi-360\li3600}}\listid5}
}{\listoverridetable{\listoverride\listid1\listoverridecount0\ls0}{\listoverride\listid2\listoverridecount0\ls1}{\listoverride\listid3\listoverridecount0\ls2}{\listoverride\listid4\listoverridecount0\ls3}{\listoverride\listid5\listoverridecount0\ls4}}

{\info{\creatim\yr0\mo0\dy0\hr0\min0}{\author Dustin Tinklin}{\revtim\yr2008\mo12\dy1\hr11\min42}{\printim\yr0\mo0\dy0\hr0\min0}{\comment StarWriter}{\vern3000}}\deftab720
{\*\pgdsctbl
{\pgdsc0\pgdscuse195\pgwsxn11905\pghsxn16837\marglsxn1134\margrsxn1134\margtsxn1134\margbsxn1134\pgdscnxt0 Standard;}
{\pgdsc1\pgdscuse195\pgwsxn12240\pghsxn15840\marglsxn1800\margrsxn1800\margtsxn1440\margbsxn1440\pgdscnxt1 Standard;}}
{\*\pgdscno1}\paperh15840\paperw12240\margl1800\margr1800\margt1440\margb1440\sectd\sbknone\pgwsxn12240\pghsxn15840\marglsxn1800\margrsxn1800\margtsxn1440\margbsxn1440\ftnbj\ftnstart1\ftnrstcont\ftnnar\aenddoc\aftnrstcont\aftnstart1\aftnnrlc
\pard\plain \ltrpar\s1\ql\rtlch\afs28\lang255\ab\ltrch\dbch\langfe1033\hich\fs28\lang1033\b\loch\fs28\lang1033\b {\rtlch \ltrch\loch\f1\fs28\lang1033\i0\b PHP EvE API Library}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b Requirements}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 For this library to be useful, you will need:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 - A web server that runs PHP5. Some functions require PHP 5.1.3 or greater; the recommended version would be a recent version of PHP 5.2.x. This library uses SimpleXML. It is possible to replace that with another XML parser and run it on PHP4 - feel free t
o branch the code :)}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 - A web server that does not block the fsockopen() function. Unfortunately, many free PHP5 webhosts do block that function.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 - A good deal of patience :)}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b Overview}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 PHP API grabs XML data through the EvE API, caches it locally in a text file, and parses the XML into an array for further processing by you.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 The caching is a bit naive, but on the upside, very simple to maintain - no DB administration needed. There is no "cleanup" of the cache directory in this code at present. If you are going to use this API to grab data for many different users, that may bec
ome a small nuisance.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b Installation}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Copy the contents of the eveapi directory into a directory on your server. For purposes of this document, the examples will assume that you copied everything into \'91./classes/eveapi\'92.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 The EvE API library defaults to caching its fetches, in accordance with CCP\'92s wishes. The default caching directory is \'91./xmlcache/\'92.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b Basic operation}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 You will need to use at least two includes in your code: 'class.api.php', which has the core class and does all the actual fetching of data, caching, and so on; and one or more of the parsing class files. In order to choose a character, for example, you'd 
need 'class.charselect.php'.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 require_once('./classes/eveapi/class.api.php');}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 require_once('./classes/eveapi/class.charselect.php');}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 You'll also want the API User ID, API Key, and the character name. Those could be hardcoded or entered on the fly, stored in a DB, whatever. I'll hardcode them here. You get them from http://myeve.eve-online.com/api/, of course.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $apiuser = '12345'; // User ID}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $apipass = '67890'; // API Key - limited or full, depending on what you intend to fetch}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $mychar = 'Win Sauce'; // Character name}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Time to initialize a new Api object. You'll want to decide on whether to debug; and you'll set the credentials. Note we just use User ID and API Key to start. You can only fetch rather limited things with that combo, but that's how we need to start out.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $api = new Api();}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $api->debug(true); // When testing and debugging your code \'96 comment out once everything\'92s working}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $api->setCredentials($apiuser,$apipass);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Alright, now we'll go fetch us the character ID for that character name, and we'll grab the corporation ID while we're at it. Fetching anything in the PHP API Library is done in two steps: Get the raw XML, then parse it using a parser class. The function n
ame in Api and in the parsing class is identical, by convention in this library.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $apicharsxml = $api->getCharacters();}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $apichars = Characters::getCharacters($apicharsxml);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 That was simple enough. Now step through the $apichars array to find the character we'll use.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 foreach($apichars as $index => $thischar)}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 \{}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 \tab if($thischar['charname']==$mychar)}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 \tab \{}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 \tab \tab $apichar=$thischar['charid'];}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 \tab \tab $apicorp=$thischar['corpid'];}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 \tab \}}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 \}}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Really what you\'92d do is present the existing characters to a user to choose from, but this works for a demonstration example.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 At this point, you can continue by grabbing more data, using the $apichar variable. For example, to get a list of the members of your corporation (which assumes an include of class.membertrack.php - remember, each API function has a separate parsing class)
:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 // The following fetch will need our character ID - so set it, now that we have it}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $api->setCredentials($apiuser,$apipass,$apichar); }
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $membersxml = $api->getMemberTracking();}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $members = MemberTracking::getMemberTracking($membersxml);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 I trust you get the idea. In a nutshell, you use a one-two-punch of grabbing the XML, and then parsing the XML. The names of the parsing and XML grabbing functions are identical, and the name of the parsing class matches the function minus the \'93get\'94. }
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Example: api->getWalletJournal and WalletJournal::getWalletJournal.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Lastly, if you had debug on and you want to output the debug messages, use this:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $api->printErrors();}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 There's an example api-testing.php file included in this release, which shows some of the functions of the API. It fetches hard-coded user ID and API key from config.php, so edit config.php before you upload the code to your server for testing.}
\par \page\pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ab\ltrch\dbch\langfe1033\hich\fs24\lang1033\b\loch\fs24\lang1033\b {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b Error Reporting}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Error reporting is rudimentary in this version of the library. The individual functions will return \'93null\'94 if an API error was encountered. If $api->debug(true); has been set, you can print out any encountered errors with $api->printErrors();. Currently, t
his also outputs informational debug information, such as cache file creation, cache loading, &c.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Note that PHP itself will throw Warning: error messages if the API server cannot be resolved or cannot be reached. You may want to set error_reporting() in your script if you do not wish to have these Warning: messages displayed when the API server is down
.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ab\ltrch\dbch\langfe1033\hich\fs24\lang1033\b\loch\fs24\lang1033\b {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b Control functions for the EvE API PHP library}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 The examples in this section assume that you created a variable $api for the Api class, like so:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $api = new Api();}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b setCredentials(userid, apikey, charid)}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Set the user ID, API key (full or limited) and character ID to be used in subsequent API operations.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 \line Returns \'93true\'94 if successful, and \'93false\'94 if not.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $api->setCredentials(userid, apikey, charid);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch \'93}{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0\ltrch\hich\fs20\loch\fs20 userid\'94 and \'93apikey\'94 are required parameters, while \'93charid\'94 is optional.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Note that \'93charid\'94 is a numeric value. You can grab it using getCharacters \'96 see above example, please \'96 or using getCharacterID(name);. That latter one\'92s not implemented yet, though, so natch.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b getCredentials()}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns an array containing \'91userid\'92, \'91apikey\'92 and \'91charid\'92 indices filled with the vales set previously with the setCredentials call}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $credentials = $api->getCredentials();}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b setDebug(bool)}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Set debug output to \'93true\'94 or \'93false\'94. It defaults to \'93false\'94.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns \'93true\'94 if successful, and \'93false\'94 if not.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $api->setDebug(true);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b getDebug()}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Return the value of the debug level, \'93true\'94 or \'93false\'94.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $debug = $api->getDebug();}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b cache(bool)}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Set caching to \'93true\'94 or \'93false\'94. It defaults to \'93true\'94.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns \'93true\'94 if successful, and \'93false\'94 if not.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $api->cache(false);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b setCacheDir(dir)}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Set the caching directory to a value. It defaults to \'93./xmlcache\'94.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns \'93true\'94 if successful, and \'93false\'94 if not.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $api->setCacheDir(\'93/var/tmp/dont-live-in-my-homedir-you-bum/\'94);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b setTimeTolerance(tolerance)}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Set the amount of time in minutes that the API functions will wait after CCP\'92s \'93cachedUntil\'94 time has expired before attempting to call an API function again instead of delivering from cache. Default is 5 minutes. Used to allow some leeway in your server\'92s
 clock being \'93fast\'94 compared to CCP\'92s clock.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns \'93true\'94 if successful, and \'93false\'94 if not.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $api->setTimeTolerance(10); // 5 minutes, pshaw, we need 10}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b printErrors()}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Print debug messages. These may be actual errors, or merely informational debug.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ab\ltrch\dbch\langfe1033\hich\fs24\lang1033\b\loch\fs24\lang1033\b {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b Implemented EvE API functions}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 See the very handy API index at http://wiki.eve-id.net/APIv2_Page_Index for EvE server requirements for each API function and sample output, please.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Note that all of the parsing functions have an optional \'93timeout\'94 parameter. \'93timeout\'94 is the time to cache the data in minutes. By default, functions will cache for a time specified by CCP in the returned data \'96 with the current exception of WalletJournal
 and WalletTransactions, which default to 65 minutes because CCP\'92s \'93cachedUntil\'94 value for these is broken.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 You can use \'93print_r($data);\'94 to print the raw array data of any function, if you need to see how the array is formatted. If you are going to do that, a \'93header("Content-type: text/plain");\'94 might help to keep the formatting \'96 though that\'92ll screw up any H
TML formatting on your page, of course. \'93For testing purposes only\'94.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b Account Balances}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\qj\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Grab the Account Balance for either the character, or the corp the character belongs to.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns an array if successful, and \'93null\'94 if not.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\qj\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Include needed:}
\par \pard\plain \ltrpar\s1\qj\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 require_once('./classes/eveapi/class.balances.php');}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\qj\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Authentication needed:}
\par \pard\plain \ltrpar\s1\qj\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 This needs the character ID to work.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $api->setCredentials($apiuser,$apipass,$apichar);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\qj\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Fetching and parsing:}
\par \pard\plain \ltrpar\s1\qj\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $dataxml = $api->getAccountBalance([corp-bool],[timeout]);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $data = AccountBalance::getAccountBalance($dataxml);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain {\listtext\pard\plain \li1080\ri0\lin1080\rin0\fi-360\fs20\lang1033\langfe1033\fs20\qj\f3\f3\f3 \'95\tab}\ilvl0 \ltrpar\s1\qj\ls4\li1080\ri0\lin1080\rin0\fi-360\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch \'93}{\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 corp-bool\'94 is \'93true\'94 if you wish to fetch for corp, and \'93false\'94 if you wish to fetch for character. It defaults to \'93false\'94.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b Alliance List}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 This is a global fetch, no authentication is actually needed. An APIv1 function that Rynlam added to the mix. Handy for getting all of the member corp IDs of a particular alliance, which can then be used when fetching the corp sheet data.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns an array if successful, and \'93null\'94 if not.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Include needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 require_once('./classes/eveapi/class.alliancelist.php');}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Authentication needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 None}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Fetching and parsing:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $dataxml = $api->getAllianceList([timeout]);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $data = AllianceList::getAllianceList($dataxml);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b Asset List}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\qj\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Grab the Asset List for either the character, or the corp the character belongs to. In order to fetch for corp, the character has to have the \'93Director\'94 or \'93CEO\'94 role in the corp.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns an array if successful, and \'93null\'94 if not.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\qj\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Include needed:}
\par \pard\plain \ltrpar\s1\qj\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 require_once('./classes/eveapi/class.assetlist.php');}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\qj\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Authentication needed:}
\par \pard\plain \ltrpar\s1\qj\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 This needs the character ID and full API key.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $api->setCredentials($apiuser,$apipass,$apichar);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\qj\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Fetching and parsing:}
\par \pard\plain \ltrpar\s1\qj\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $dataxml = $api->getAssetList([corp-bool],[timeout]);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $data = AssetList::getAssetList($dataxml);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch \'93}{\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 corp-bool\'94 is \'93true\'94 if you wish to fetch for corp, and \'93false\'94 if you wish to fetch for character. It defaults to \'93false}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b Character List (on account)}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Needed to get the char ID, whithout which a lot of the other fetches don't work.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns an array if successful, and \'93null\'94 if not.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Include needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 require_once('./classes/eveapi/class.charselect.php');}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Authentication needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 User ID and API Key}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $api->setCredentials($apiuser,$apipass);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Fetching and parsing:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $dataxml = $api->getCharacters([timeout]);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $data = Characters::getCharacters($dataxml);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b Character Sheet}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 A detailed character sheet for one of your characters.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns an array if successful, and \'93null\'94 if not.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Include needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 require_once(\'91./classes/eveapi/class.charactersheet.php\'92);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Authentication needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 This needs the character ID to work.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $api->setCredentials($apiuser,$apipass,$apichar);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Fetching and parsing:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $dataxml=$api->getCharacterSheet([timeout]);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $data = CharacterSheet::getCharacterSheet($dataxml);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b Conquerable Station/Outpost List }
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ltrch\dbch\langfe1033\hich\fs22\lang1033\loch\fs22\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Lists station ID, name,station type ID, solar system ID,  corporation ID and corporation name of conquerable stations.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Include needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 require_once('./classes/eveapi/class.conquerablestations.php');}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Authentication needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Authentication not required.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Fetching and parsing:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $dataxml = $api->getConquerableStations();}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $data = ConquerableStations::getConquerableStations($dataxml);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b Corporation Sheet }
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 A detailed corporation sheet for the corporation you are a member of. Can also be used to see information about corporations in an alliance.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns an array if successful, and \'93null\'94 if not.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Include needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 require_once(\'91./classes/eveapi/class.corporationsheet.php\'92);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Authentication needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 This needs the character ID to work. A CEO or Director will see more data than a member.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $api->setCredentials($apiuser,$apipass,$apichar);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Fetching and parsing:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $dataxml=$api->getCorporationSheet([corpid],[timeout]);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $data = CorporationSheet::getCorporationSheet($dataxml);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain {\listtext\pard\plain \li360\ri0\lin360\rin0\fi-360\fs20\lang1033\langfe1033\fs20\f3\f3\f3 \'95\tab}\ilvl0 \ltrpar\s1\ls3\li360\ri0\lin360\rin0\fi-360\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch \'93}{\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 corpid\'94 is to be used if you wish to see information about a corporation in an alliance. If omitted, information about your character\'92s corp is returned.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b Error List }
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 An APIv2 function that has not been implemented yet. Have at it!}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b Industry Jobs }
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\qj\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Grab the list of Industry Jobs for either the character, or the corp the character belongs to. To fetch for corp, the character has to have the \'91Factory Manager\'92 role.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns an array if successful, and \'93null\'94 if not.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\qj\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Include needed:}
\par \pard\plain \ltrpar\s1\qj\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 require_once('./classes/eveapi/class.industryjobs.php');}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\qj\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Authentication needed:}
\par \pard\plain \ltrpar\s1\qj\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 This needs the character ID and full API key.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $api->setCredentials($apiuser,$apipass,$apichar);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\qj\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Fetching and parsing:}
\par \pard\plain \ltrpar\s1\qj\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $dataxml = $api->getIndustryJobs([corp-bool],[timeout]);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $data = IndustryJobs::getIndustryJobs($dataxml);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch \'93}{\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 corp-bool\'94 is \'93true\'94 if you wish to fetch for corp, and \'93false\'94 if you wish to fetch for character. It defaults to \'93false\'94}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0{\rtlch\ltrch\hich\fs22\b\loch\fs22\b Journal Entries}}{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0{\rtlch\ltrch\hich\fs22\loch\fs22  }}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 A detailed wallet journal (like the one in the EvE UI) showing transactions up to one week back. Returns a maximum of 1000 entries in one go, but can be run multiple times to get more than 1000 entries, as long as they are not older than one week.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 CCP recommends to run this function, and run it again until it returns less than 1000 entries, for simplicity\'92s sake.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns an array if successful, and \'93null\'94 if not.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Include needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 require_once('./classes/eveapi/class.api.php');}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 require_once(\'91./classes/eveapi/class.walletjournal.php\'92);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Authentication needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 This needs the character ID to work. If used for corp, you\'92ll need to have the \'93junior accountant\'94 role in that corp.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $api->setCredentials($apiuser,$apipass,$apichar);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Fetching and parsing:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $dataxml=$api->getWalletJournal([refid],[corp-bool],[accountkey],[timeout]);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $data = WalletJournal::getWalletJournal($dataxml);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain {\listtext\pard\plain \li1080\ri0\lin1080\rin0\fi-360\lang1033\langfe1033\f3\f3\f3 \'95\tab}\ilvl0 \ltrpar\s1\ls2\li1080\ri0\lin1080\rin0\fi-360\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033{\rtlch\ltrch\hich\loch{\rtlch \ltrch\loch \'93}}{{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 refid\'94 \'96 if specified, you will get up to 1000 entries }}{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0{\rtlch\ltrch\hich\fs20\i\loch\fs20\i before}{\rtlch\ltrch\hich\fs20\loch\fs20  that refid. If not specified, you will get the newest entries, up to 1000.}}
\par \pard\plain {\listtext\pard\plain \li1080\ri0\lin1080\rin0\fi-360\fs20\lang1033\langfe1033\fs20\f3\f3\f3 \'95\tab}\ilvl0 \ltrpar\s1\ls2\li1080\ri0\lin1080\rin0\fi-360\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch \'93}{\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 corp-bool\'94 is \'93true\'94 if you wish to fetch for corp, and \'93false\'94 if you wish to fetch for character. It defaults to \'93false\'94.}
\par \pard\plain {\listtext\pard\plain \li1080\ri0\lin1080\rin0\fi-360\fs20\lang1033\langfe1033\fs20\f3\f3\f3 \'95\tab}\ilvl0 \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch \'93}{\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 accountkey\'94 defaults to \'931000\'94, which is the corp master wallet or the char wallet. Other possible values are 1001 through 1006, for the available corp wallet divisions.}
\par \pard\plain {\listtext\pard\plain \li1080\ri0\lin1080\rin0\fi-360\fs20\lang1033\langfe1033\fs20\f3\f3\f3 \'95\tab}\ilvl0 \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch \'93}{\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 timeout\'94 defaults to 65 minutes, because the \'93cachedUntil\'94 value for this function is broken as of Empyrian Age 1.0.1}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b Kill Log (Killmails) }
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 A array of killmails for a character or corporation, including all details that are available in game.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Include needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 require_once(\'91./classes/eveapi/class.killlog.php\'92);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Authentication needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 This needs the character ID to work. If used for corp, you\'92ll need to a Director or CEO your corp.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $api->setCredentials($apiuser,$apipass,$apichar);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Fetching and parsing:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\qj\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $dataxml = $api->getKilllog([corp-bool],[timeout]);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $data =  KillLog::getKillLog($dataxml);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b Market Transactions }
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 A detailed view of wallet market transactions (like the one in the EvE UI) showing transactions up to one week back. Returns a maximum of 1000 entries in one go, but can be run multiple times to get more than 1000 entries, as long as they are not older tha
n one week.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 CCP recommends to run this function, and run it again until it returns less than 1000 entries, for simplicity\'92s sake.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns an array if successful, and \'93null\'94 if not.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Include needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 {\*\bkmkstart DDE_LINK}require_once('./classes/eveapi/class.api.php');{\*\bkmkend DDE_LINK}}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 require_once(\'91./classes/eveapi/class.wallettransactions.php\'92);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 previously just class.transactions.php}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Authentication needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 This needs the character ID to work. If used for corp, you\'92ll need to have the \'93junior accountant\'94 role in that corp.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $api->setCredentials($apiuser,$apipass,$apichar);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Fetching and parsing:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $dataxml=$api->getWalletTransactions([transid],[corp-bool],[accountkey],[timeout]);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $data = WalletTransactions::getWalletTransactions($dataxml);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain {\listtext\pard\plain \li1080\ri0\lin1080\rin0\fi-360\lang1033\langfe1033\f3\f3\f3 \'95\tab}\ilvl0 \ltrpar\s1\ls1\li1080\ri0\lin1080\rin0\fi-360\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033{\rtlch\ltrch\hich\loch{\rtlch \ltrch\loch \'93}}{{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 transid\'94 \'96 if specified, you will get up to 1000 entries }}{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0{\rtlch\ltrch\hich\fs20\i\loch\fs20\i before}{\rtlch\ltrch\hich\fs20\loch\fs20  that transid. If not specified, you will get the newest entries, up to 1000.}}
\par \pard\plain {\listtext\pard\plain \li1080\ri0\lin1080\rin0\fi-360\fs20\lang1033\langfe1033\fs20\f3\f3\f3 \'95\tab}\ilvl0 \ltrpar\s1\ls1\li1080\ri0\lin1080\rin0\fi-360\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch \'93}{\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 corp-bool\'94 is \'93true\'94 if you wish to fetch for corp, and \'93false\'94 if you wish to fetch for character. It defaults to \'93false\'94.}
\par \pard\plain {\listtext\pard\plain \li1080\ri0\lin1080\rin0\fi-360\fs20\lang1033\langfe1033\fs20\f3\f3\f3 \'95\tab}\ilvl0 \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch \'93}{\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 accountkey\'94 defaults to \'931000\'94, which is the corp master wallet or the char wallet. Other possible values are 1001 through 1006, for the available corp wallet divisions.}
\par \pard\plain {\listtext\pard\plain \li1080\ri0\lin1080\rin0\fi-360\fs20\lang1033\langfe1033\fs20\f3\f3\f3 \'95\tab}\ilvl0 \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch \'93}{\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 timeout\'94 defaults to 65 minutes, because the \'93cachedUntil\'94 value for this function is broken as of Empyrian Age 1.0.1}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b Market Orders }
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 A list of market orders that are either not expired or have expired in the past week (at most). }
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns an Array if successful, and \'93null\'94 if not}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Include needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 require_once('./classes/eveapi/class.api.php');}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 require_once('./classes/eveapi/class.marketorders.php');}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Authentication needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 This needs the character ID to work. If used for corp, you\'92ll need to have the \'93accountant\'94 role in that corp.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $api->setCredentials($apiuser,$apipass,$apichar);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Fetching and parsing:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $dataxml = $api->getMarketOrders();}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $data = MarketOrders::getMarketOrders($dataxml);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0{\rtlch\ltrch\hich\fs22\b\loch\fs22\b Map: Jumps}}{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0{\rtlch\ltrch\hich\fs20\loch\fs20  }}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns the number of ship jumps for each solarsystem, If a system is not listed it has had no jumps}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns an array if successful, and null if not.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Include needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 require_once('./classes/eveapi/class.api.php');}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 require_once('./classes/eveapi/class.jumps.php');}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Authentication needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 None}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Fetching and parsing:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $dataxml = $api->getJumps();}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $data = Jumps::getJumps($dataxml);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b Map: Kills }
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Lists the number of kills within solarsystems in the last hour }
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns an array if successful, or \'93null\'94 if not}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Include needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 require_once('./classes/eveapi/class.api.php');}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 require_once('./classes/eveapi/class.kills.php');}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Authentication needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 None}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Fetching and parsing:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $dataxml = $api->getKills();}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $data = Kills::getKills($dataxml);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0{\rtlch\ltrch\hich\fs22\b\loch\fs22\b Map: Sovereignty}}{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0{\rtlch\ltrch\hich\fs22\loch\fs22  }}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Lists Solarsystems and which factions or alliances claim them }
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns an array if successful, or \'93null\'94 if not}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Include needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 require_once('./classes/eveapi/class.api.php');}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 require_once('./classes/eveapi/class.Sovereignty.php');}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Authentication needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 None}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Fetching and parsing:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $dataxml = $api->getsovereignty();}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $data = Sovereignty::getSovereignty($dataxml);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0{\rtlch\ltrch\hich\fs22\b\loch\fs22\b Name to ID Conversion}}{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0{\rtlch\ltrch\hich\fs22\loch\fs22  }}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Lists ID's of the names you have passed to it. It can be alliance, corporation or characters}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns an array if successful, or \'93null\'94 if not}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Include needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\af4\afs20\lang255\ltrch\dbch\af4\langfe1033\hich\f4\fs20\lang2057\loch\f4\fs20\lang2057 {\rtlch \ltrch\loch\f4\fs20\lang2057\i0\b0 require_once('./classes/eveapi/class.api.php');}
\par \pard\plain \ltrpar\s1\ql\rtlch\af4\afs20\lang255\ltrch\dbch\af4\langfe1033\hich\f4\fs20\lang2057\loch\f4\fs20\lang2057 {\rtlch \ltrch\loch\f4\fs20\lang2057\i0\b0 require_once('./classes/eveapi/class.characterid.php');}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Authentication needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 none}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Fetching and parsing:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\af4\afs20\lang255\ltrch\dbch\af4\langfe1033\hich\f4\fs20\lang2057\loch\f4\fs20\lang2057 {\rtlch \ltrch\loch\f4\fs20\lang2057\i0\b0 $dataxml = $api->getCharacterID('Yorick Downe,CCP Garthagk');}
\par \pard\plain \ltrpar\s1\ql\rtlch\af4\afs20\lang255\ltrch\dbch\af4\langfe1033\hich\f4\fs20\lang2057\loch\f4\fs20\lang2057 {\rtlch \ltrch\loch\f4\fs20\lang2057\i0\b0 $data = CharacterID::getCharacterID($dataxml);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 the only parameter is a comma separated list of names}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b ID to Name Conversion (undocumented)}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Lists the names of the ID's past to it. I can resolve most IDs, including alliances, corporations, characters factions and item types.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns an array if successful, or \'93null\'94 if not}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Include needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\af4\afs20\lang255\ltrch\dbch\af4\langfe1033\hich\f4\fs20\lang2057\loch\f4\fs20\lang2057 {\rtlch \ltrch\loch\f4\fs20\lang2057\i0\b0 require_once('./classes/eveapi/class.api.php');}
\par \pard\plain \ltrpar\s1\ql\rtlch\af4\afs20\lang255\ltrch\dbch\af4\langfe1033\hich\f4\fs20\lang2057\loch\f4\fs20\lang2057 {\rtlch \ltrch\loch\f4\fs20\lang2057\i0\b0 require_once('./classes/eveapi/class.charactername.php');}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Authentication needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 None}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Fetching and parsing:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\af4\afs20\lang255\ltrch\dbch\af4\langfe1033\hich\f4\fs20\lang2057\loch\f4\fs20\lang2057 {\rtlch \ltrch\loch\f4\fs20\lang2057\i0\b0 $dataxml = $api->getCharacterName('221710318,797400947');}
\par \pard\plain \ltrpar\s1\ql\rtlch\af4\afs20\lang255\ltrch\dbch\af4\langfe1033\hich\f4\fs20\lang2057\loch\f4\fs20\lang2057 {\rtlch \ltrch\loch\f4\fs20\lang2057\i0\b0 $data = CharacterName::getCharacterName($dataxml);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 The only parameter is a comma separated list of IDs}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b ID to Character Portrait }
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 When called this function returns the portrait of the character that corresponds to the ID passed to it.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns an array if successful, or \'93null\'94 if not}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Include needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\af4\afs20\lang255\ltrch\dbch\af4\langfe1033\hich\f4\fs20\lang2057\loch\f4\fs20\lang2057 {\rtlch \ltrch\loch\f4\fs20\lang2057\i0\b0 require_once('./classes/eveapi/class.api.php');}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0 \line }
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Authentication needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 None}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Fetching and parsing:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\af4\afs20\lang255\ltrch\dbch\af4\langfe1033\hich\f4\fs20\lang2057\loch\f4\fs20\lang2057 {\rtlch \ltrch\loch\f4\fs20\lang2057\i0\b0 $path_large = $api->getCharacterPortrait(797400947,256);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 The first parameter is  the ID of the character whom portrait you wish to receive followed by the size of the portrait, Valid sizes are 64 and 256}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b RefTypes List }
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 This is a global fetch, no authentication is actually needed. An APIv1 function that gets a complete list of refTypes, which are needed to map the data returned by getWalletJournal and getWalletTransactions into types of transactions, such as \'93Player Donat
ion\'94.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns an array if successful, and \'93null\'94 if not.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Include needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 require_once('./classes/eveapi/class.generic.php');}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Authentication needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 None}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Fetching and parsing:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $dataxml = $api->getRefTypes([timeout]);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $data = RefTypes::getRefTypes($dataxml);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b Skill in Training }
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns the currently training skill for one of your characters. Use the array returned by \'93getSkillTree\'94 to find the name of the skill that corresponds to the id that will be returned.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns an array if successful, and \'93null\'94 if not.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Include needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 require_once(\'91./classes/eveapi/class.charactersheet.php\'92);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Authentication needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 This needs the character ID to work.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $api->setCredentials($apiuser,$apipass,$apichar);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Fetching and parsing:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $dataxml=$api->getSkillInTraining([timeout]);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $data = SkillInTraining::getSkillInTraining($dataxml);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b Skill Tree}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns the complete EvE-Online Skill Tree. Useful, for example, for mapping the id of SkillInTraining to a skill name.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Include needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 require_once('./classes/eveapi/class.generic.php');}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Authentication needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 None}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Fetching and parsing:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $dataxml = $api->getSkillTree([timeout]);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $data = SkillTree::getSkillTree($dataxml);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b Starbase (POS) Details}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns details about a particular starbase that belongs to your corp. You\'92ll need to have CEO or Director roles to get this list.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns an array if successful, and \'93null\'94 if not.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Include needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 require_once(\'91./classes/eveapi/class.starbasedetail.php\'92);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Authentication needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 This needs the character ID to work, and a full API key.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $api->setCredentials($apiuser,$apipass,$apichar);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Fetching and parsing:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0{\rtlch\ltrch\hich\fs20\loch\fs20 $dataxml=$api->}}{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0{\rtlch\ltrch\hich\f5\fs22\loch\f5\fs22  }{\rtlch\ltrch\hich\fs20\loch\fs20 getStarbaseDetail ($id,[timeout]);}}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0{\rtlch\ltrch\hich\fs20\loch\fs20 $data = StarbaseDetail::}}{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0{\rtlch\ltrch\hich\f5\fs22\loch\f5\fs22  }{\rtlch\ltrch\hich\fs20\loch\fs20 getStarbaseDetail ($dataxml);}}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain {\listtext\pard\plain \li360\ri0\lin360\rin0\fi-360\fs20\lang1033\langfe1033\fs20\f3\f3\f3 \'95\tab}\ilvl0 \ltrpar\s1\ls0\li360\ri0\lin360\rin0\fi-360\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 id \'96 This is the ID of the POS as returned by getStarbaseList}
\par \pard\plain \ltrpar\s1\li720\ri0\lin720\rin0\fi0\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b Starbase (POS) List}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns a list of starbases that belong to your corp. You\'92ll need to have CEO or Director roles to get this list.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns an array if successful, and \'93null\'94 if not.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Include needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 require_once(\'91./classes/eveapi/class.starbaselist.php\'92);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Authentication needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 This needs the character ID to work, and a full API key.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $api->setCredentials($apiuser,$apipass,$apichar);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Fetching and parsing:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0{\rtlch\ltrch\hich\fs20\loch\fs20 $dataxml=$api->}}{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0{\rtlch\ltrch\hich\f5\fs22\loch\f5\fs22  }{\rtlch\ltrch\hich\fs20\loch\fs20 getStarbaseList ([timeout]);}}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0{\rtlch\ltrch\hich\fs20\loch\fs20 $data = StarbaseList::}}{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0{\rtlch\ltrch\hich\f5\fs22\loch\f5\fs22  }{\rtlch\ltrch\hich\fs20\loch\fs20 getStarbaseList ($dataxml);}}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b Factional Warfare Stats}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Stats for Factional war}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns an array if successful, or \'93null\'94 if not}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Include needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 require_once('./classes/eveapi/class.api.php');}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 require_once('./classes/eveapi/class.facwarstats.php');}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Authentication needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Limited/Full?}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Fetching and parsing:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $dataxml = $api->getFacWarStats();}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $data = FacWarStats::getFacWarStats($dataxml);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b Factional Warfare Top 100 Stats}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 List the top 100 factional in warfare }
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns an array if successful, or \'93null\'94 if not}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Include needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 require_once('./classes/eveapi/class.api.php');}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 require_once('./classes/eveapi/class.facwartopstats.php');}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Authentication needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 None}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Fetching and parsing:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $dataxml = $api->getFacWarTopStats();}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $data = FacWarTopStats::getFacWarTopStats($dataxml);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0{\rtlch\ltrch\hich\fs22\b\loch\fs22\b Factional Warfare Occupancy Map}}{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0{\rtlch\ltrch\hich\fs22\loch\fs22  }}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Lists the systems occupied by factions in the faction war system }
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns an array if successful, or \'93null\'94 if not}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Include needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 require_once('./classes/eveapi/class.api.php');}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 require_once('./classes/eveapi/class.f{\rtlch\ltrch\dbch\hich\f4\loch\f4 acwarsystems}.php');}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Authentication needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 None}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Fetching and parsing:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0{\rtlch\ltrch\dbch\hich\fs20\loch\fs20 $dataxml = $api->get}}{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0{\rtlch\ltrch\dbch\hich\f4\fs20\loch\f4\fs20 FacWarSystems}{\rtlch\ltrch\dbch\hich\fs20\loch\fs20 ();}}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $data = Jumps::get{\rtlch\ltrch\dbch\hich\f4\loch\f4 FacWarSystems}($dataxml);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b MedalMembers}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Lists medals awarded to corporations members (not sure on this as for me this is blank)}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns an array if successful, or \'93null\'94 if not}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Include needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 require_once('./classes/eveapi/class.api.php');}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 require_once('./classes/eveapi/class.php');}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Authentication needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 api key of director/ceo}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Fetching and parsing:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0{\rtlch\ltrch\dbch\hich\fs20\loch\fs20 $dataxml = $api->getMemeberMedals}}{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0{\rtlch\ltrch\dbch\hich\fs20\loch\fs20 ();}}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $data = MemberMedals::getMemberMedals($dataxml);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0{\rtlch\ltrch\hich\fs22\b\loch\fs22\b Medals}}{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0{\rtlch\ltrch\hich\fs22\loch\fs22  }}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Lists the Medals received or for corporation medals created and awarded.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns an array if successful, or \'93null\'94 if not}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Include needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 require_once('./classes/eveapi/class.api.php');}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 require_once('./classes/eveapi/class.medals.php');}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Authentication needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Api key, assuming director privileges for corporation}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Fetching and parsing:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $dataxml = $api->getMedals();}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $data = Medals::getMedals($dataxml);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b CertificateTree }
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Lists certificates and their requirements}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns an array if successful, or \'93null\'94 if not}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Include needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 require_once('./classes/eveapi/class.api.php');}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 require_once('./classes/eveapi/class.certificatetree.php');}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Authentication needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 None}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Fetching and parsing:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $dataxml = $api->getCertificateTree();}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $data = CertificateTree::getCertificateTree($dataxml);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs22\lang255\ab\ltrch\dbch\langfe1033\hich\fs22\lang1033\b\loch\fs22\lang1033\b {\rtlch \ltrch\loch\f1\fs22\lang1033\i0\b ServerStatus}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Lists the status and number of pilots online.}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 Returns an array if successful, or \'93null\'94 if not}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Include needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 require_once('./classes/eveapi/class.api.php');}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 require_once('./classes/eveapi/class.serverstatus.php');}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Authentication needed:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 None}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ab\ltrch\dbch\langfe1033\hich\fs20\lang1033\b\loch\fs20\lang1033\b {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b Fetching and parsing:}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $dataxml = $api->getServerStatus();}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs20\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 {\rtlch \ltrch\loch\f1\fs20\lang1033\i0\b0 $data = ServerStatus::getServerStatus($dataxml);}
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs20\lang1033\loch\fs20\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par \pard\plain \ltrpar\s1\ql\rtlch\afs24\lang255\ltrch\dbch\langfe1033\hich\fs24\lang1033\loch\fs24\lang1033 
\par }